{"version":3,"file":"static/js/33.4a1549c1.chunk.js","mappings":"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","sources":["components/services/api.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '99502501974a4beb2ea41e38054b6c9e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    const data = await response.data.results;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}`\n    );\n\n    const data = await response.data.results;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.data.cast;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.data.results;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const FlexContainer = styled.div`\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-bottom: 15px;\n  margin: 0 auto;\n  display: flex;\n  align-items: left;\n  justify-content: start;\n  gap: 20px;\n  box-shadow: 0px 5px 5px 0px rgba(140, 140, 140, 0.47);\n`;\nexport const InfoContainer = styled.div`\n  padding: 15px;\n  box-shadow: 0px 5px 5px 0px rgba(140, 140, 140, 0.47);\n`;\n\nexport const BackLink = styled(Link)`\n  margin-left: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  padding-bottom: 5px;\n  padding-top: 5px;\n  text-decoration: none;\n  color: black;\n  gap: 5px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'components/services/api';\nimport { FlexContainer, InfoContainer, BackLink } from './MovieDetails.styled';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState('');\n  const [movieGenres, setMovieGenres] = useState([]);\n  const [savedLocation, setSavedLocation] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (savedLocation) {\n      return;\n    }\n    const backLinkHref = location.state?.from ?? '/';\n    setSavedLocation(backLinkHref);\n  }, [location.state?.from, savedLocation]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const MovieDetails = await getMovieDetails(Number(movieId));\n        setMovie(MovieDetails);\n        setMovieGenres(MovieDetails.genres);\n      } catch (error) {}\n    })();\n  }, [movieId]);\n  const { title, poster_path, overview, vote_average, release_date } = movie;\n  const releaseYear = new Date().getFullYear(release_date);\n  const userScore = Number(vote_average).toFixed() * 10;\n\n  return (\n    <div>\n      <BackLink to={savedLocation}>\n        <AiOutlineArrowLeft size=\"15\" />\n        <span>Go back</span>\n      </BackLink>\n      <FlexContainer>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            alt={title}\n          />\n        </div>\n        <div>\n          <h2>\n            {title} ({releaseYear})\n          </h2>\n          <p>User Score: {userScore}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {movieGenres.length > 0 &&\n              movieGenres.map(genre => ` ${genre.name}`)}\n          </p>\n        </div>\n      </FlexContainer>\n      <InfoContainer>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </InfoContainer>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["API_KEY","axios","getTrendingMovies","response","data","results","console","log","searchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","FlexContainer","styled","InfoContainer","BackLink","Link","useState","movie","setMovie","movieGenres","setMovieGenres","savedLocation","setSavedLocation","useParams","location","useLocation","useEffect","backLinkHref","state","from","Number","MovieDetails","genres","title","poster_path","overview","vote_average","release_date","releaseYear","Date","getFullYear","userScore","toFixed","to","size","src","alt","length","map","genre","name","Suspense","fallback"],"sourceRoot":""}